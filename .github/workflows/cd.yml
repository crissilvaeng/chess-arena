---
name: "Continuous Delivery"

on:
  push:
    branches:
      - "*"
  pull_request:
    branches:
      - main

env:
  nats: yifan-messaging-nats
  rabbitmq: yifan-broker-amqp

jobs:
  provision:
    name: üê≥ Provision
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
    - name: apps:exists
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USERNAME }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        script: |
          apps:exists ${{ github.event.repository.name }}
    - name: apps:create
      if: ${{ failure() }}
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USERNAME }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        script: |
          apps:create ${{ github.event.repository.name }}
  nats:
    name: üîå Network (NATS)
    needs: provision
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
    - name: nats:linked
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USERNAME }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        script: |
          nats:linked ${{ env.nats }} ${{ github.event.repository.name }}
    - name: nats:link
      uses: appleboy/ssh-action@master
      if: ${{ failure() }}
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USERNAME }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        script: |
          nats:link ${{ env.nats }} ${{ github.event.repository.name }}
  rabbitmq:
    name: üîå Network (RabbitMQ)
    needs: provision
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
    - name: rabbitmq:linked
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USERNAME }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        script: |
          rabbitmq:linked ${{ env.rabbitmq }} ${{ github.event.repository.name }}
    - name: rabbitmq:link
      uses: appleboy/ssh-action@master
      if: ${{ failure() }}
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USERNAME }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        script: |
          rabbitmq:link ${{ env.rabbitmq }} ${{ github.event.repository.name }}
  config:
    name: ‚öôÔ∏è Configuration
    needs:
      - nats
      - rabbitmq
    runs-on: ubuntu-latest
    steps:
    - name: docker-option:add
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USERNAME }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        script: |
          docker-options:add ${{ github.event.repository.name }} deploy "-v /var/run/docker.sock:/var/run/docker.sock"
    - name: config:set
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USERNAME }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        script: |
          config:set --encoded --no-restart ${{ github.event.repository.name }} API_KEY=${{ secrets.API_KEY }}
  # deploy:
  #   name: üöÄ Deploy
  #   needs: config
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: git:checkout
  #       uses: actions/checkout@v2
  #       with:
  #         fetch-depth: 0
  #     - name: git:push
  #       uses: dokku/github-action@master
  #       with:
  #         git_remote_url: 'ssh://${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }}/${{ github.event.repository.name }}'
  #         ssh_private_key: ${{ secrets.SSH_PRIVATE_KEY }}
